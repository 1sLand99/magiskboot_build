From bff0110b2dfdc377657bb8890b8b32a19f30cff8 Mon Sep 17 00:00:00 2001
From: Ookiineko <chiisaineko@protonmail.com>
Date: Mon, 20 Mar 2023 01:41:12 +0800
Subject: [PATCH 1/6] base: impl sendfile using read & write for non-Linux
 platforms

Signed-off-by: Ookiineko <chiisaineko@protonmail.com>
---
 native/src/base/files.cpp   | 76 +++++++++++++++++++++++++++++++++++++
 native/src/base/xwrap.hpp   |  2 ++
 native/src/base/xwrap.rs    |  1 +
 native/src/boot/bootimg.cpp | 38 +++++++++++++++++++
 4 files changed, 117 insertions(+)

diff --git a/native/src/base/files.cpp b/native/src/base/files.cpp
index de7e46c..8ee3c7f 100644
--- a/native/src/base/files.cpp
+++ b/native/src/base/files.cpp
@@ -136,7 +136,11 @@ void cp_afc(const char *src, const char *dest) {
         if (S_ISREG(a.st.st_mode)) {
             int sfd = xopen(src, O_RDONLY | O_CLOEXEC);
             int dfd = xopen(dest, O_WRONLY | O_CREAT | O_TRUNC | O_CLOEXEC, 0);
+#ifdef __linux__
             xsendfile(dfd, sfd, nullptr, a.st.st_size);
+#else
+            _sendfile_stub(dfd, sfd, a.st.st_size);
+#endif
             close(sfd);
             close(dfd);
         } else if (S_ISLNK(a.st.st_mode)) {
@@ -166,7 +204,11 @@ void clone_dir(int src, int dest) {
             case DT_REG: {
                 int sfd = xopenat(src, entry->d_name, O_RDONLY | O_CLOEXEC);
                 int dfd = xopenat(dest, entry->d_name, O_WRONLY | O_CREAT | O_TRUNC | O_CLOEXEC, 0);
+#ifdef __linux__
                 xsendfile(dfd, sfd, nullptr, a.st.st_size);
+#else
+                _sendfile_stub(dfd, sfd, a.st.st_size);
+#endif
                 fsetattr(dfd, &a);
                 close(dfd);
                 close(sfd);
diff --git a/native/src/base/xwrap.hpp b/native/src/base/xwrap.hpp
index ce7a6dd..b4ba2c0 100644
--- a/native/src/base/xwrap.hpp
+++ b/native/src/base/xwrap.hpp
@@ -52,7 +55,9 @@ int xmkdir(const char *pathname, mode_t mode);
 int xmkdirs(const char *pathname, mode_t mode);
 int xmkdirat(int dirfd, const char *pathname, mode_t mode);
 void *xmmap(void *addr, size_t length, int prot, int flags, int fd, off_t offset);
+#ifdef __linux__
 ssize_t xsendfile(int out_fd, int in_fd, off_t *offset, size_t count);
+#endif
 pid_t xfork();
 int xpoll(pollfd *fds, nfds_t nfds, int timeout);
 ssize_t xrealpath(const char * __restrict__ path, char * __restrict__ buf, size_t bufsiz);
diff --git a/native/src/boot/bootimg.cpp b/native/src/boot/bootimg.cpp
index 5b84e23..c87500a 100644
--- a/native/src/boot/bootimg.cpp
+++ b/native/src/boot/bootimg.cpp
@@ -44,7 +44,11 @@ static size_t restore(int fd, const char *filename) {
     int ifd = xopen(filename, O_RDONLY);
     size_t size = lseek(ifd, 0, SEEK_END);
     lseek(ifd, 0, SEEK_SET);
+#ifdef __linux__
     xsendfile(fd, ifd, nullptr, size);
+#else
+    _sendfile_stub(fd, ifd, size);
+#endif
     close(ifd);
     return size;
 }
diff --git a/native/src/base/xwrap.rs b/native/src/base/xwrap.rs
index 583474d..9bf814b 100644
--- a/native/src/base/xwrap.rs
+++ b/native/src/base/xwrap.rs
@@ -594,6 +600,7 @@ unsafe extern "C" fn xmkdirat(dirfd: RawFd, path: *const c_char, mode: mode_t) -
 }
 
 #[no_mangle]
+#[cfg(any(target_os = "linux", target_os = "android"))]
 unsafe extern "C" fn xsendfile(
     out_fd: RawFd,
     in_fd: RawFd,
-- 
2.40.0

