From 84df261f5b5cfd5cda74bb02df99495fc873fe81 Mon Sep 17 00:00:00 2001
From: Ookiineko <chiisaineko@protonmail.com>
Date: Thu, 9 Mar 2023 23:29:40 +0800
Subject: [PATCH] native: fix header includes

Signed-off-by: Ookiineko <chiisaineko@protonmail.com>
---
 native/src/Cargo.toml       |  1 +
 native/src/base/files.cpp   |  8 ++++++++
 native/src/base/files.hpp   |  6 ++++++
 native/src/base/logging.hpp |  4 ++++
 native/src/base/misc.cpp    | 17 +++++++++++++++++
 native/src/base/stream.cpp  |  3 +++
 native/src/base/xwrap.hpp   |  5 +++++
 7 files changed, 44 insertions(+)

diff --git a/native/src/Cargo.toml b/native/src/Cargo.toml
index 114b55c..0b6e3c0 100644
--- a/native/src/Cargo.toml
+++ b/native/src/Cargo.toml
@@ -1,12 +1,12 @@
 [workspace]
 exclude = ["external"]
-members = ["base", "boot", "core", "init", "sepolicy"]
+members = ["base", "boot"]
 resolver = "2"
 
 [workspace.dependencies]
 cxx = { path = "external/cxx-rs" }
 cxx-gen = { path = "external/cxx-rs/gen/lib" }
-libc = "0.2"
+libc = { path = "../../../../libc-compat/rs" }
 cfg-if = "1.0"
 num-traits = "0.2"
 num-derive = "0.4"
@@ -23,7 +23,6 @@ x509-cert = "0.2"
 der = "0.7"
 bytemuck = "1.14"
 fdt = "0.1"
-procfs = { version = "0.16", default-features = false }
 
 [workspace.dependencies.argh]
 git = "https://github.com/google/argh.git"
@@ -38,13 +38,5 @@ git = "https://github.com/tafia/quick-protobuf.git"
 rev = "2f37d5a65504de7d716b5b28fd82219501a901a9"
 
-[profile.dev]
-opt-level = "z"
-lto = true
-codegen-units = 1
-panic = "abort"
 
 [profile.release]
-opt-level = "z"
-lto = true
 codegen-units = 1
-panic = "abort"

diff --git a/native/src/base/files.cpp b/native/src/base/files.cpp
index 6829de2..8aef651 100644
--- a/native/src/base/files.cpp
+++ b/native/src/base/files.cpp
@@ -1,10 +1,39 @@
+#ifdef _WIN32
+#  include <mman.h>
+#else
 #include <sys/mman.h>
+#endif
+#ifdef __linux__
 #include <sys/sendfile.h>
 #include <sys/sysmacros.h>
 #include <linux/fs.h>
+#else
+#  include <sys/types.h>
+#  if defined(__APPLE__)
+#    include <sys/disk.h>
+#  endif
+#endif
+#ifndef _WIN32
+#  include <sys/ioctl.h>
+#endif
 #include <fcntl.h>
 #include <unistd.h>
 #include <libgen.h>
+#ifdef _WIN32
+#  define O_CLOEXEC O_NOINHERIT
+
+#  include <getline.h>
+#  include <winsup/acl_compat.h>
+#  include <winsup/at_compat.h>
+#  include <winsup/dirent_compat.h>
+#  include <winsup/mknod_compat.h>
+#  include <winsup/stat_compat.h>
+
+#  define dirent _dirent_stub
+#  define getline msvc_getline
+#elif defined(__EMSCRIPTEN__)
+#  include <emsup/mkdev_stubs.h>
+#endif
 
 #include <base.hpp>
 #include <selinux.hpp>
diff --git a/native/src/base/files.hpp b/native/src/base/files.hpp
index 0d8d11c..c4bb952 100644
--- a/native/src/base/files.hpp
+++ b/native/src/base/files.hpp
@@ -6,7 +6,21 @@
 #include <string>
 #include <vector>
 
+#ifdef __linux__
 #include <linux/fs.h>
+#elif defined(__APPLE__)
+#  include <sys/disk.h>
+#elif defined(__CYGWIN__)
+#  include <cygwin/fs.h>
+#elif defined(_WIN32)
+#  include <winsup/dirent_compat.h>
+#  include <winsup/file_compat.h>
+
+#  define closedir _closedir_stub
+#  define DIR _DIR_stub
+#  define opendir _opendir_stub
+#  define fopen _fopen_stub
+#endif
 #include "misc.hpp"
 
 template <typename T>
@@ -110,7 +110,11 @@ std::vector<mount_info> parse_mount_info(const char *pid);
 std::string resolve_preinit_dir(const char *base_dir);
 
 using sFILE = std::unique_ptr<FILE, decltype(&fclose)>;
+#ifdef _WIN32
+using sDIR = std::unique_ptr<DIR, int (*)(DIR*)>;
+#else
 using sDIR = std::unique_ptr<DIR, decltype(&closedir)>;
+#endif
 sDIR make_dir(DIR *dp);
 sFILE make_file(FILE *fp);
 
diff --git a/native/src/base/misc.cpp b/native/src/base/misc.cpp
index 313d136..f0188b5 100644
--- a/native/src/base/misc.cpp
+++ b/native/src/base/misc.cpp
@@ -1,13 +1,40 @@
 #include <sys/types.h>
+#ifndef _WIN32
 #include <sys/wait.h>
+#endif
+#ifdef __linux__
 #include <sys/prctl.h>
 #include <sys/sysmacros.h>
+#else
+#  include <sys/types.h>
+#endif
 #include <fcntl.h>
+#ifndef _WIN32
 #include <pwd.h>
+#endif
 #include <unistd.h>
+#ifdef __APPLE__
+#  define environ (*_NSGetEnviron())
+
+#  include <crt_externs.h>
+#  include <sys/syscall.h>
+#endif
+#ifdef __linux__
 #include <syscall.h>
+#else
+#  include <pthread.h>
+#  ifndef _WIN32
+#    include <signal.h>
+#  endif
+#endif
 #include <random>
 #include <string>
+#ifdef _WIN32
+#  include <winsup/str_compat.h>
+#endif
+#ifndef HAVE_STRLCPY
+#  include <libbsd/str_compat.h>
+#endif
 
 #include <base.hpp>
 
diff --git a/native/src/base/include/stream.hpp b/native/src/base/include/stream.hpp
index 4742085..b461534 100644
--- a/native/src/base/include/stream.hpp
+++ b/native/src/base/include/stream.hpp
@@ -1,6 +1,10 @@
 #pragma once

+#ifdef _WIN32
+#  include <winsup/uio_compat.h>
+#else
 #include <sys/uio.h>
+#endif
 #include <cstdio>
 #include <memory>
 
diff --git a/native/src/base/xwrap.hpp b/native/src/base/xwrap.hpp
index ce7a6dd..b4ba2c0 100644
--- a/native/src/base/xwrap.hpp
+++ b/native/src/base/xwrap.hpp
@@ -2,8 +2,23 @@
 
 #include <dirent.h>
 #include <stdio.h>
+#include <sys/types.h>  // bionic quirks?
+#ifdef _WIN32
+typedef int socklen_t;
+struct msghdr;
+typedef unsigned long int nfds_t;
+struct pollfd;
+#else
+#include <sys/socket.h>  // same as above
 #include <poll.h>
+#endif
 #include <fcntl.h>
+#ifdef _WIN32
+#  include <winsup/dirent_compat.h>
+
+#  define dirent _dirent_stub
+#  define DIR _DIR_stub
+#endif
 
 extern "C" {
 
diff --git a/native/src/boot/bootimg.cpp b/native/src/boot/bootimg.cpp
index a80a746..857eff2 100644
--- a/native/src/boot/bootimg.cpp
+++ b/native/src/boot/bootimg.cpp
@@ -1,6 +1,14 @@
 #include <functional>
 #include <memory>

+#ifdef _WIN32
+#  define O_CLOEXEC O_NOINHERIT
+
+#  include <winsup/str_compat.h>
+#  include <winsup/file_compat.h>
+
+#  define creat _creat_stub
+#endif
 #include <base.hpp>

 #include "boot-rs.hpp"
-- 
2.41.0

