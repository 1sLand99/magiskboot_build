From 14e17ecef680586e216e0a61ae567ebdbd973a38 Mon Sep 17 00:00:00 2001
From: Ookiineko <chiisaineko@protonmail.com>
Date: Mon, 20 Mar 2023 01:47:37 +0800
Subject: [PATCH 5/6] base: files: disable selinux context stuffs

Signed-off-by: Ookiineko <chiisaineko@protonmail.com>
---
 native/src/base/files.cpp | 8 ++++++++
 native/src/base/files.hpp | 2 ++
 2 file changed, 8 insertions(+)

diff --git a/native/src/base/files.cpp b/native/src/base/files.cpp
index 269d35f..081219b 100644
--- a/native/src/base/files.cpp
+++ b/native/src/base/files.cpp
@@ -142,11 +179,13 @@ void link_dir(int src, int dest) {
 int getattr(const char *path, file_attr *a) {
     if (xlstat(path, &a->st) == -1)
         return -1;
+#if 0
     char *con;
     if (lgetfilecon(path, &con) == -1)
         return -1;
     strcpy(a->con, con);
     freecon(con);
+#endif
     return 0;
 }
 
@@ -159,11 +198,13 @@ int getattrat(int dirfd, const char *name, file_attr *a) {
 int fgetattr(int fd, file_attr *a) {
     if (xfstat(fd, &a->st) < 0)
         return -1;
+#if 0
     char *con;
     if (fgetfilecon(fd, &con) < 0)
         return -1;
     strcpy(a->con, con);
     freecon(con);
+#endif
     return 0;
 }
 
@@ -172,8 +213,10 @@ int setattr(const char *path, file_attr *a) {
         return -1;
     if (chown(path, a->st.st_uid, a->st.st_gid) < 0)
         return -1;
+#if 0
     if (a->con[0] && lsetfilecon(path, a->con) < 0)
         return -1;
+#endif
     return 0;
 }
 
@@ -188,8 +231,10 @@ int fsetattr(int fd, file_attr *a) {
         return -1;
     if (fchown(fd, a->st.st_uid, a->st.st_gid) < 0)
         return -1;
+#if 0
     if (a->con[0] && fsetfilecon(fd, a->con) < 0)
         return -1;
+#endif
     return 0;
 }
 
diff --git a/native/src/base/files.hpp b/native/src/base/files.hpp
index 269d35f..081219b 100644
--- a/native/src/base/files.hpp
+++ b/native/src/base/files.hpp
@@ -22,7 +33,9 @@ static inline T align_padding(T v, int a) {
 
 struct file_attr {
     struct stat st;
+#if 0
     char con[128];
+#endif
 };
 
 struct mount_info {
-- 
2.40.0

