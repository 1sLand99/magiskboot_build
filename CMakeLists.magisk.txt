if (NOT EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/flags.h)
    find_package(Git REQUIRED)
    if (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/src/Magisk/.git)
        execute_process(
            COMMAND ${GIT_EXECUTABLE} rev-parse --short HEAD
            WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/src/Magisk"
            OUTPUT_VARIABLE "MAGISK_VERSION"
            COMMAND_ERROR_IS_FATAL ANY
            OUTPUT_STRIP_TRAILING_WHITESPACE
        )
    else()
        message(FATAL_ERROR "Cannot find Magisk")
    endif()

    # fallback version
    set(MAGISK_VER_CODE 1000000)

    if (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/src/Magisk/gradle.properties)
        file(STRINGS ${CMAKE_CURRENT_SOURCE_DIR}/src/Magisk/gradle.properties MAGISK_CONFIG_CONTENTS)
        foreach (MAGISK_CONFIG_LINE ${MAGISK_CONFIG_CONTENTS})
            string(REGEX REPLACE "^[ ]+" "" MAGISK_CONFIG_LINE ${MAGISK_CONFIG_LINE})
            if (MAGISK_CONFIG_LINE STREQUAL "" OR MAGISK_CONFIG_LINE MATCHES "^#")
                continue()
            else()
                string(REGEX MATCH "^[^=]+=[^=#]+" MAGISK_CONFIG_KV ${MAGISK_CONFIG_LINE})
                if (MAGISK_CONFIG_KV STREQUAL "")
                    continue()
                else()
                    if (MAGISK_CONFIG_KV MATCHES "^magisk\\.")
                        string(REGEX REPLACE "^magisk\\." "" MAGISK_CONFIG_KV ${MAGISK_CONFIG_KV})
                        string(REGEX MATCH "^[^=]+" MAGISK_CONFIG_KEY ${MAGISK_CONFIG_KV})
                        string(REGEX REPLACE "^${MAGISK_CONFIG_KEY}=" "" MAGISK_CONFIG_VALUE ${MAGISK_CONFIG_KV})
                        if (MAGISK_CONFIG_KEY STREQUAL "versionCode")
                            set(MAGISK_VER_CODE "${MAGISK_CONFIG_VALUE}")
                        else()
                            continue()
                        endif()
                    else()
                        continue()
                    endif()
                endif()
            endif()
        endforeach()
    endif()
    message(STATUS "Magisk version: ${MAGISK_VERSION} (version code \"${MAGISK_VER_CODE}\")")
    if (CMAKE_BUILD_TYPE MATCHES "Debug")
        set(MAGISK_DEBUG "1")
    else()
        set(MAGISK_DEBUG "0")
    endif()
    configure_file(${CMAKE_CURRENT_SOURCE_DIR}/flags.h.in ${CMAKE_CURRENT_SOURCE_DIR}/flags.h @ONLY)
endif()
add_custom_target(prepare_generated_directory
                  DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/flags.h
                  COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_CURRENT_BINARY_DIR}/generated
                  COMMAND ${CMAKE_COMMAND} -E copy_if_different ${CMAKE_CURRENT_SOURCE_DIR}/flags.h ${CMAKE_CURRENT_BINARY_DIR}/generated/flags.h
                  COMMENT "Preparing generated directory")
