# mostly copied from Magisk's build.py

if (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/vendor/Magisk/native/src/Cargo.toml)
    if (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/vendor/Magisk/native/src/base/lib.rs)
        add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/generated/base-rs.hpp
                           COMMAND ${CXXBRIDGE_EXECUTABLE} ${CXXBRIDGE_FLAGS} --header ../../vendor/Magisk/native/src/base/lib.rs -o base-rs.hpp
                           DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/vendor/Magisk/native/src/base/lib.rs
                           COMMENT "Generating CXX header base-rs.hpp"
                           WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/generated)
        add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/generated/base-rs.cpp
                           COMMAND ${CXXBRIDGE_EXECUTABLE} ${CXXBRIDGE_FLAGS} ../../vendor/Magisk/native/src/base/lib.rs -o base-rs.cpp
                           DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/vendor/Magisk/native/src/base/lib.rs
                           COMMENT "Generating CXX Rust binding base-rs.cpp"
                           WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/generated)
        add_custom_target(libbase_binding
                          DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/generated/base-rs.hpp
                                  ${CMAKE_CURRENT_BINARY_DIR}/generated/base-rs.cpp)
        add_dependencies(libbase_binding prepare_generated_directory)
        add_dependencies(libbase_binding cxxbridge)
    else()
        message(FATAL_ERROR "Cannot find native component \"base\"")
    endif()
    if (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/vendor/Magisk/native/src/boot/lib.rs)
        add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/libmagiskboot-rs.a
                           COMMAND ${CMAKE_COMMAND} -E env RUSTFLAGS=-Clinker-plugin-lto\ -Cllvm-args=-opaque-pointers CARGO_TARGET_DIR="${CMAKE_CURRENT_BINARY_DIR}/libmagiskboot_target" ${CARGO_EXECUTABLE} build -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort --target ${RUSTC_TARGET} -p magiskboot ${CARGO_FLAGS} -q
                           COMMAND ${CMAKE_COMMAND} -E copy_if_different ${CMAKE_CURRENT_BINARY_DIR}/libmagiskboot_target/${RUSTC_TARGET}/${CARGO_OUT}/libmagiskboot.a ${CMAKE_CURRENT_BINARY_DIR}/libmagiskboot-rs.a
                           COMMENT "Building Rust static library libmagiskboot-rs.a"
                           WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/vendor/Magisk/native/src)
        add_custom_target(libmagiskboot_output
                          DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/libmagiskboot-rs.a)
        add_library(libmagiskboot-rs STATIC IMPORTED)
        set_target_properties(libmagiskboot-rs PROPERTIES
                              IMPORTED_LOCATION ${CMAKE_CURRENT_BINARY_DIR}/libmagiskboot-rs.a)
        add_dependencies(libmagiskboot-rs libmagiskboot_output)
    else()
        message(FATAL_ERROR "Cannot find native component \"boot\"")
    endif()
else()
    message(FATAL_ERROR "Cannot find native component config")
endif()

add_dependencies(libbase libbase_binding)
target_include_directories(libbase PUBLIC ${CMAKE_CURRENT_BINARY_DIR}/generated)
target_link_libraries(magiskboot libmagiskboot-rs)
